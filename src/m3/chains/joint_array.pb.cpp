// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "joint_array.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* M3JointArrayStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  M3JointArrayStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* M3JointArrayCommand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  M3JointArrayCommand_reflection_ = NULL;
const ::google::protobuf::Descriptor* M3JointArrayParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  M3JointArrayParam_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_joint_5farray_2eproto() {
  protobuf_AddDesc_joint_5farray_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "joint_array.proto");
  GOOGLE_CHECK(file != NULL);
  M3JointArrayStatus_descriptor_ = file->message_type(0);
  static const int M3JointArrayStatus_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, motor_temp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, amp_temp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, torque_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, torquedot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, thetadot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, thetadotdot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, completed_spline_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, pwm_cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, flags_),
  };
  M3JointArrayStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      M3JointArrayStatus_descriptor_,
      M3JointArrayStatus::default_instance_,
      M3JointArrayStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(M3JointArrayStatus));
  M3JointArrayCommand_descriptor_ = file->message_type(1);
  static const int M3JointArrayCommand_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, tq_desired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, pwm_desired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, q_stiffness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, ctrl_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, vias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, q_desired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, pos_desired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, qdot_desired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, q_slew_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, smoothing_mode_),
  };
  M3JointArrayCommand_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      M3JointArrayCommand_descriptor_,
      M3JointArrayCommand::default_instance_,
      M3JointArrayCommand_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayCommand, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(M3JointArrayCommand));
  M3JointArrayParam_descriptor_ = file->message_type(2);
  static const int M3JointArrayParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayParam, test_),
  };
  M3JointArrayParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      M3JointArrayParam_descriptor_,
      M3JointArrayParam::default_instance_,
      M3JointArrayParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3JointArrayParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(M3JointArrayParam));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_joint_5farray_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    M3JointArrayStatus_descriptor_, &M3JointArrayStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    M3JointArrayCommand_descriptor_, &M3JointArrayCommand::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    M3JointArrayParam_descriptor_, &M3JointArrayParam::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_joint_5farray_2eproto() {
  delete M3JointArrayStatus::default_instance_;
  delete M3JointArrayStatus_reflection_;
  delete M3JointArrayCommand::default_instance_;
  delete M3JointArrayCommand_reflection_;
  delete M3JointArrayParam::default_instance_;
  delete M3JointArrayParam_reflection_;
}

void protobuf_AddDesc_joint_5farray_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_component_5fbase_2eproto();
  ::protobuf_AddDesc_trajectory_2eproto();
  ::protobuf_AddDesc_joint_2eproto();
  ::protobuf_AddDesc_smoothing_5fmode_2eproto();
  ::protobuf_AddDesc_joint_5farray_5fmode_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021joint_array.proto\032\024component_base.prot"
    "o\032\020trajectory.proto\032\013joint.proto\032\024smooth"
    "ing_mode.proto\032\026joint_array_mode.proto\"\377"
    "\001\n\022M3JointArrayStatus\022\033\n\004base\030\001 \001(\0132\r.M3"
    "BaseStatus\022\022\n\nmotor_temp\030\002 \003(\001\022\020\n\010amp_te"
    "mp\030\003 \003(\001\022\017\n\007current\030\004 \003(\001\022\016\n\006torque\030\005 \003("
    "\001\022\021\n\ttorquedot\030\006 \003(\001\022\r\n\005theta\030\007 \003(\001\022\020\n\010t"
    "hetadot\030\010 \003(\001\022\023\n\013thetadotdot\030\t \003(\001\022\034\n\024co"
    "mpleted_spline_idx\030\n \001(\005\022\017\n\007pwm_cmd\030\013 \003("
    "\005\022\r\n\005flags\030\014 \003(\005\"\220\002\n\023M3JointArrayCommand"
    "\022\022\n\ntq_desired\030\001 \003(\001\022\023\n\013pwm_desired\030\002 \003("
    "\005\022\023\n\013q_stiffness\030\003 \003(\001\022$\n\tctrl_mode\030\004 \003("
    "\0162\021.JOINT_ARRAY_MODE\022\031\n\004vias\030\005 \003(\0132\013.M3J"
    "ointVia\022\021\n\tq_desired\030\006 \003(\001\022\023\n\013pos_desire"
    "d\030\007 \003(\001\022\024\n\014qdot_desired\030\010 \003(\001\022\023\n\013q_slew_"
    "rate\030\t \003(\001\022\'\n\016smoothing_mode\030\n \003(\0162\017.SMO"
    "OTHING_MODE\"!\n\021M3JointArrayParam\022\014\n\004test"
    "\030\001 \001(\001B\002H\001", 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "joint_array.proto", &protobuf_RegisterTypes);
  M3JointArrayStatus::default_instance_ = new M3JointArrayStatus();
  M3JointArrayCommand::default_instance_ = new M3JointArrayCommand();
  M3JointArrayParam::default_instance_ = new M3JointArrayParam();
  M3JointArrayStatus::default_instance_->InitAsDefaultInstance();
  M3JointArrayCommand::default_instance_->InitAsDefaultInstance();
  M3JointArrayParam::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_joint_5farray_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_joint_5farray_2eproto {
  StaticDescriptorInitializer_joint_5farray_2eproto() {
    protobuf_AddDesc_joint_5farray_2eproto();
  }
} static_descriptor_initializer_joint_5farray_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int M3JointArrayStatus::kBaseFieldNumber;
const int M3JointArrayStatus::kMotorTempFieldNumber;
const int M3JointArrayStatus::kAmpTempFieldNumber;
const int M3JointArrayStatus::kCurrentFieldNumber;
const int M3JointArrayStatus::kTorqueFieldNumber;
const int M3JointArrayStatus::kTorquedotFieldNumber;
const int M3JointArrayStatus::kThetaFieldNumber;
const int M3JointArrayStatus::kThetadotFieldNumber;
const int M3JointArrayStatus::kThetadotdotFieldNumber;
const int M3JointArrayStatus::kCompletedSplineIdxFieldNumber;
const int M3JointArrayStatus::kPwmCmdFieldNumber;
const int M3JointArrayStatus::kFlagsFieldNumber;
#endif  // !_MSC_VER

M3JointArrayStatus::M3JointArrayStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void M3JointArrayStatus::InitAsDefaultInstance() {
  base_ = const_cast< ::M3BaseStatus*>(&::M3BaseStatus::default_instance());
}

M3JointArrayStatus::M3JointArrayStatus(const M3JointArrayStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void M3JointArrayStatus::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  completed_spline_idx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

M3JointArrayStatus::~M3JointArrayStatus() {
  SharedDtor();
}

void M3JointArrayStatus::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
  }
}

void M3JointArrayStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M3JointArrayStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return M3JointArrayStatus_descriptor_;
}

const M3JointArrayStatus& M3JointArrayStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5farray_2eproto();  return *default_instance_;
}

M3JointArrayStatus* M3JointArrayStatus::default_instance_ = NULL;

M3JointArrayStatus* M3JointArrayStatus::New() const {
  return new M3JointArrayStatus;
}

void M3JointArrayStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_base()) {
      if (base_ != NULL) base_->::M3BaseStatus::Clear();
    }
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    completed_spline_idx_ = 0;
  }
  motor_temp_.Clear();
  amp_temp_.Clear();
  current_.Clear();
  torque_.Clear();
  torquedot_.Clear();
  theta_.Clear();
  thetadot_.Clear();
  thetadotdot_.Clear();
  pwm_cmd_.Clear();
  flags_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool M3JointArrayStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .M3BaseStatus base = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_motor_temp;
        break;
      }
      
      // repeated double motor_temp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_motor_temp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_motor_temp())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_motor_temp())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_motor_temp;
        if (input->ExpectTag(25)) goto parse_amp_temp;
        break;
      }
      
      // repeated double amp_temp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_amp_temp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_amp_temp())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_amp_temp())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_amp_temp;
        if (input->ExpectTag(33)) goto parse_current;
        break;
      }
      
      // repeated double current = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_current:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_current())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_current())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_current;
        if (input->ExpectTag(41)) goto parse_torque;
        break;
      }
      
      // repeated double torque = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_torque:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_torque())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_torque())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_torque;
        if (input->ExpectTag(49)) goto parse_torquedot;
        break;
      }
      
      // repeated double torquedot = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_torquedot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_torquedot())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_torquedot())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(49)) goto parse_torquedot;
        if (input->ExpectTag(57)) goto parse_theta;
        break;
      }
      
      // repeated double theta = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57, input, this->mutable_theta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_theta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_theta;
        if (input->ExpectTag(65)) goto parse_thetadot;
        break;
      }
      
      // repeated double thetadot = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_thetadot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65, input, this->mutable_thetadot())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thetadot())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_thetadot;
        if (input->ExpectTag(73)) goto parse_thetadotdot;
        break;
      }
      
      // repeated double thetadotdot = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_thetadotdot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_thetadotdot())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thetadotdot())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_thetadotdot;
        if (input->ExpectTag(80)) goto parse_completed_spline_idx;
        break;
      }
      
      // optional int32 completed_spline_idx = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_completed_spline_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &completed_spline_idx_)));
          set_has_completed_spline_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_pwm_cmd;
        break;
      }
      
      // repeated int32 pwm_cmd = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pwm_cmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_pwm_cmd())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pwm_cmd())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_pwm_cmd;
        if (input->ExpectTag(96)) goto parse_flags;
        break;
      }
      
      // repeated int32 flags = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_flags())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_flags())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_flags;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void M3JointArrayStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .M3BaseStatus base = 1;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->base(), output);
  }
  
  // repeated double motor_temp = 2;
  for (int i = 0; i < this->motor_temp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->motor_temp(i), output);
  }
  
  // repeated double amp_temp = 3;
  for (int i = 0; i < this->amp_temp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->amp_temp(i), output);
  }
  
  // repeated double current = 4;
  for (int i = 0; i < this->current_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->current(i), output);
  }
  
  // repeated double torque = 5;
  for (int i = 0; i < this->torque_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->torque(i), output);
  }
  
  // repeated double torquedot = 6;
  for (int i = 0; i < this->torquedot_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->torquedot(i), output);
  }
  
  // repeated double theta = 7;
  for (int i = 0; i < this->theta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->theta(i), output);
  }
  
  // repeated double thetadot = 8;
  for (int i = 0; i < this->thetadot_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->thetadot(i), output);
  }
  
  // repeated double thetadotdot = 9;
  for (int i = 0; i < this->thetadotdot_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->thetadotdot(i), output);
  }
  
  // optional int32 completed_spline_idx = 10;
  if (has_completed_spline_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->completed_spline_idx(), output);
  }
  
  // repeated int32 pwm_cmd = 11;
  for (int i = 0; i < this->pwm_cmd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->pwm_cmd(i), output);
  }
  
  // repeated int32 flags = 12;
  for (int i = 0; i < this->flags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->flags(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* M3JointArrayStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .M3BaseStatus base = 1;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->base(), target);
  }
  
  // repeated double motor_temp = 2;
  for (int i = 0; i < this->motor_temp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->motor_temp(i), target);
  }
  
  // repeated double amp_temp = 3;
  for (int i = 0; i < this->amp_temp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->amp_temp(i), target);
  }
  
  // repeated double current = 4;
  for (int i = 0; i < this->current_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->current(i), target);
  }
  
  // repeated double torque = 5;
  for (int i = 0; i < this->torque_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->torque(i), target);
  }
  
  // repeated double torquedot = 6;
  for (int i = 0; i < this->torquedot_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->torquedot(i), target);
  }
  
  // repeated double theta = 7;
  for (int i = 0; i < this->theta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(7, this->theta(i), target);
  }
  
  // repeated double thetadot = 8;
  for (int i = 0; i < this->thetadot_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(8, this->thetadot(i), target);
  }
  
  // repeated double thetadotdot = 9;
  for (int i = 0; i < this->thetadotdot_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->thetadotdot(i), target);
  }
  
  // optional int32 completed_spline_idx = 10;
  if (has_completed_spline_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->completed_spline_idx(), target);
  }
  
  // repeated int32 pwm_cmd = 11;
  for (int i = 0; i < this->pwm_cmd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->pwm_cmd(i), target);
  }
  
  // repeated int32 flags = 12;
  for (int i = 0; i < this->flags_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->flags(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int M3JointArrayStatus::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .M3BaseStatus base = 1;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }
    
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional int32 completed_spline_idx = 10;
    if (has_completed_spline_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->completed_spline_idx());
    }
    
  }
  // repeated double motor_temp = 2;
  {
    int data_size = 0;
    data_size = 8 * this->motor_temp_size();
    total_size += 1 * this->motor_temp_size() + data_size;
  }
  
  // repeated double amp_temp = 3;
  {
    int data_size = 0;
    data_size = 8 * this->amp_temp_size();
    total_size += 1 * this->amp_temp_size() + data_size;
  }
  
  // repeated double current = 4;
  {
    int data_size = 0;
    data_size = 8 * this->current_size();
    total_size += 1 * this->current_size() + data_size;
  }
  
  // repeated double torque = 5;
  {
    int data_size = 0;
    data_size = 8 * this->torque_size();
    total_size += 1 * this->torque_size() + data_size;
  }
  
  // repeated double torquedot = 6;
  {
    int data_size = 0;
    data_size = 8 * this->torquedot_size();
    total_size += 1 * this->torquedot_size() + data_size;
  }
  
  // repeated double theta = 7;
  {
    int data_size = 0;
    data_size = 8 * this->theta_size();
    total_size += 1 * this->theta_size() + data_size;
  }
  
  // repeated double thetadot = 8;
  {
    int data_size = 0;
    data_size = 8 * this->thetadot_size();
    total_size += 1 * this->thetadot_size() + data_size;
  }
  
  // repeated double thetadotdot = 9;
  {
    int data_size = 0;
    data_size = 8 * this->thetadotdot_size();
    total_size += 1 * this->thetadotdot_size() + data_size;
  }
  
  // repeated int32 pwm_cmd = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->pwm_cmd_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pwm_cmd(i));
    }
    total_size += 1 * this->pwm_cmd_size() + data_size;
  }
  
  // repeated int32 flags = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->flags_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->flags(i));
    }
    total_size += 1 * this->flags_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M3JointArrayStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const M3JointArrayStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const M3JointArrayStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void M3JointArrayStatus::MergeFrom(const M3JointArrayStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  motor_temp_.MergeFrom(from.motor_temp_);
  amp_temp_.MergeFrom(from.amp_temp_);
  current_.MergeFrom(from.current_);
  torque_.MergeFrom(from.torque_);
  torquedot_.MergeFrom(from.torquedot_);
  theta_.MergeFrom(from.theta_);
  thetadot_.MergeFrom(from.thetadot_);
  thetadotdot_.MergeFrom(from.thetadotdot_);
  pwm_cmd_.MergeFrom(from.pwm_cmd_);
  flags_.MergeFrom(from.flags_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base()) {
      mutable_base()->::M3BaseStatus::MergeFrom(from.base());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_completed_spline_idx()) {
      set_completed_spline_idx(from.completed_spline_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void M3JointArrayStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M3JointArrayStatus::CopyFrom(const M3JointArrayStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M3JointArrayStatus::IsInitialized() const {
  
  return true;
}

void M3JointArrayStatus::Swap(M3JointArrayStatus* other) {
  if (other != this) {
    std::swap(base_, other->base_);
    motor_temp_.Swap(&other->motor_temp_);
    amp_temp_.Swap(&other->amp_temp_);
    current_.Swap(&other->current_);
    torque_.Swap(&other->torque_);
    torquedot_.Swap(&other->torquedot_);
    theta_.Swap(&other->theta_);
    thetadot_.Swap(&other->thetadot_);
    thetadotdot_.Swap(&other->thetadotdot_);
    std::swap(completed_spline_idx_, other->completed_spline_idx_);
    pwm_cmd_.Swap(&other->pwm_cmd_);
    flags_.Swap(&other->flags_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata M3JointArrayStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = M3JointArrayStatus_descriptor_;
  metadata.reflection = M3JointArrayStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int M3JointArrayCommand::kTqDesiredFieldNumber;
const int M3JointArrayCommand::kPwmDesiredFieldNumber;
const int M3JointArrayCommand::kQStiffnessFieldNumber;
const int M3JointArrayCommand::kCtrlModeFieldNumber;
const int M3JointArrayCommand::kViasFieldNumber;
const int M3JointArrayCommand::kQDesiredFieldNumber;
const int M3JointArrayCommand::kPosDesiredFieldNumber;
const int M3JointArrayCommand::kQdotDesiredFieldNumber;
const int M3JointArrayCommand::kQSlewRateFieldNumber;
const int M3JointArrayCommand::kSmoothingModeFieldNumber;
#endif  // !_MSC_VER

M3JointArrayCommand::M3JointArrayCommand()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void M3JointArrayCommand::InitAsDefaultInstance() {
}

M3JointArrayCommand::M3JointArrayCommand(const M3JointArrayCommand& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void M3JointArrayCommand::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

M3JointArrayCommand::~M3JointArrayCommand() {
  SharedDtor();
}

void M3JointArrayCommand::SharedDtor() {
  if (this != default_instance_) {
  }
}

void M3JointArrayCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M3JointArrayCommand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return M3JointArrayCommand_descriptor_;
}

const M3JointArrayCommand& M3JointArrayCommand::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5farray_2eproto();  return *default_instance_;
}

M3JointArrayCommand* M3JointArrayCommand::default_instance_ = NULL;

M3JointArrayCommand* M3JointArrayCommand::New() const {
  return new M3JointArrayCommand;
}

void M3JointArrayCommand::Clear() {
  tq_desired_.Clear();
  pwm_desired_.Clear();
  q_stiffness_.Clear();
  ctrl_mode_.Clear();
  vias_.Clear();
  q_desired_.Clear();
  pos_desired_.Clear();
  qdot_desired_.Clear();
  q_slew_rate_.Clear();
  smoothing_mode_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool M3JointArrayCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double tq_desired = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_tq_desired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_tq_desired())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_tq_desired())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(9)) goto parse_tq_desired;
        if (input->ExpectTag(16)) goto parse_pwm_desired;
        break;
      }
      
      // repeated int32 pwm_desired = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pwm_desired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_pwm_desired())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pwm_desired())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pwm_desired;
        if (input->ExpectTag(25)) goto parse_q_stiffness;
        break;
      }
      
      // repeated double q_stiffness = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_q_stiffness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_q_stiffness())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_q_stiffness())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_q_stiffness;
        if (input->ExpectTag(32)) goto parse_ctrl_mode;
        break;
      }
      
      // repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ctrl_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (JOINT_ARRAY_MODE_IsValid(value)) {
            add_ctrl_mode(static_cast< JOINT_ARRAY_MODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &JOINT_ARRAY_MODE_IsValid,
                 this->mutable_ctrl_mode())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ctrl_mode;
        if (input->ExpectTag(42)) goto parse_vias;
        break;
      }
      
      // repeated .M3JointVia vias = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vias()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_vias;
        if (input->ExpectTag(49)) goto parse_q_desired;
        break;
      }
      
      // repeated double q_desired = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_q_desired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_q_desired())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_q_desired())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(49)) goto parse_q_desired;
        if (input->ExpectTag(57)) goto parse_pos_desired;
        break;
      }
      
      // repeated double pos_desired = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_pos_desired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57, input, this->mutable_pos_desired())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_pos_desired())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_pos_desired;
        if (input->ExpectTag(65)) goto parse_qdot_desired;
        break;
      }
      
      // repeated double qdot_desired = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_qdot_desired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65, input, this->mutable_qdot_desired())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_qdot_desired())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_qdot_desired;
        if (input->ExpectTag(73)) goto parse_q_slew_rate;
        break;
      }
      
      // repeated double q_slew_rate = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_q_slew_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_q_slew_rate())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_q_slew_rate())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_q_slew_rate;
        if (input->ExpectTag(80)) goto parse_smoothing_mode;
        break;
      }
      
      // repeated .SMOOTHING_MODE smoothing_mode = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smoothing_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (SMOOTHING_MODE_IsValid(value)) {
            add_smoothing_mode(static_cast< SMOOTHING_MODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &SMOOTHING_MODE_IsValid,
                 this->mutable_smoothing_mode())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_smoothing_mode;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void M3JointArrayCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated double tq_desired = 1;
  for (int i = 0; i < this->tq_desired_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->tq_desired(i), output);
  }
  
  // repeated int32 pwm_desired = 2;
  for (int i = 0; i < this->pwm_desired_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->pwm_desired(i), output);
  }
  
  // repeated double q_stiffness = 3;
  for (int i = 0; i < this->q_stiffness_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->q_stiffness(i), output);
  }
  
  // repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
  for (int i = 0; i < this->ctrl_mode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ctrl_mode(i), output);
  }
  
  // repeated .M3JointVia vias = 5;
  for (int i = 0; i < this->vias_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->vias(i), output);
  }
  
  // repeated double q_desired = 6;
  for (int i = 0; i < this->q_desired_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->q_desired(i), output);
  }
  
  // repeated double pos_desired = 7;
  for (int i = 0; i < this->pos_desired_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->pos_desired(i), output);
  }
  
  // repeated double qdot_desired = 8;
  for (int i = 0; i < this->qdot_desired_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->qdot_desired(i), output);
  }
  
  // repeated double q_slew_rate = 9;
  for (int i = 0; i < this->q_slew_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->q_slew_rate(i), output);
  }
  
  // repeated .SMOOTHING_MODE smoothing_mode = 10;
  for (int i = 0; i < this->smoothing_mode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->smoothing_mode(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* M3JointArrayCommand::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated double tq_desired = 1;
  for (int i = 0; i < this->tq_desired_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->tq_desired(i), target);
  }
  
  // repeated int32 pwm_desired = 2;
  for (int i = 0; i < this->pwm_desired_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->pwm_desired(i), target);
  }
  
  // repeated double q_stiffness = 3;
  for (int i = 0; i < this->q_stiffness_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->q_stiffness(i), target);
  }
  
  // repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
  for (int i = 0; i < this->ctrl_mode_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->ctrl_mode(i), target);
  }
  
  // repeated .M3JointVia vias = 5;
  for (int i = 0; i < this->vias_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->vias(i), target);
  }
  
  // repeated double q_desired = 6;
  for (int i = 0; i < this->q_desired_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->q_desired(i), target);
  }
  
  // repeated double pos_desired = 7;
  for (int i = 0; i < this->pos_desired_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(7, this->pos_desired(i), target);
  }
  
  // repeated double qdot_desired = 8;
  for (int i = 0; i < this->qdot_desired_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(8, this->qdot_desired(i), target);
  }
  
  // repeated double q_slew_rate = 9;
  for (int i = 0; i < this->q_slew_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->q_slew_rate(i), target);
  }
  
  // repeated .SMOOTHING_MODE smoothing_mode = 10;
  for (int i = 0; i < this->smoothing_mode_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->smoothing_mode(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int M3JointArrayCommand::ByteSize() const {
  int total_size = 0;
  
  // repeated double tq_desired = 1;
  {
    int data_size = 0;
    data_size = 8 * this->tq_desired_size();
    total_size += 1 * this->tq_desired_size() + data_size;
  }
  
  // repeated int32 pwm_desired = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pwm_desired_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pwm_desired(i));
    }
    total_size += 1 * this->pwm_desired_size() + data_size;
  }
  
  // repeated double q_stiffness = 3;
  {
    int data_size = 0;
    data_size = 8 * this->q_stiffness_size();
    total_size += 1 * this->q_stiffness_size() + data_size;
  }
  
  // repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ctrl_mode_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->ctrl_mode(i));
    }
    total_size += 1 * this->ctrl_mode_size() + data_size;
  }
  
  // repeated .M3JointVia vias = 5;
  total_size += 1 * this->vias_size();
  for (int i = 0; i < this->vias_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vias(i));
  }
  
  // repeated double q_desired = 6;
  {
    int data_size = 0;
    data_size = 8 * this->q_desired_size();
    total_size += 1 * this->q_desired_size() + data_size;
  }
  
  // repeated double pos_desired = 7;
  {
    int data_size = 0;
    data_size = 8 * this->pos_desired_size();
    total_size += 1 * this->pos_desired_size() + data_size;
  }
  
  // repeated double qdot_desired = 8;
  {
    int data_size = 0;
    data_size = 8 * this->qdot_desired_size();
    total_size += 1 * this->qdot_desired_size() + data_size;
  }
  
  // repeated double q_slew_rate = 9;
  {
    int data_size = 0;
    data_size = 8 * this->q_slew_rate_size();
    total_size += 1 * this->q_slew_rate_size() + data_size;
  }
  
  // repeated .SMOOTHING_MODE smoothing_mode = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->smoothing_mode_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->smoothing_mode(i));
    }
    total_size += 1 * this->smoothing_mode_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M3JointArrayCommand::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const M3JointArrayCommand* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const M3JointArrayCommand*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void M3JointArrayCommand::MergeFrom(const M3JointArrayCommand& from) {
  GOOGLE_CHECK_NE(&from, this);
  tq_desired_.MergeFrom(from.tq_desired_);
  pwm_desired_.MergeFrom(from.pwm_desired_);
  q_stiffness_.MergeFrom(from.q_stiffness_);
  ctrl_mode_.MergeFrom(from.ctrl_mode_);
  vias_.MergeFrom(from.vias_);
  q_desired_.MergeFrom(from.q_desired_);
  pos_desired_.MergeFrom(from.pos_desired_);
  qdot_desired_.MergeFrom(from.qdot_desired_);
  q_slew_rate_.MergeFrom(from.q_slew_rate_);
  smoothing_mode_.MergeFrom(from.smoothing_mode_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void M3JointArrayCommand::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M3JointArrayCommand::CopyFrom(const M3JointArrayCommand& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M3JointArrayCommand::IsInitialized() const {
  
  return true;
}

void M3JointArrayCommand::Swap(M3JointArrayCommand* other) {
  if (other != this) {
    tq_desired_.Swap(&other->tq_desired_);
    pwm_desired_.Swap(&other->pwm_desired_);
    q_stiffness_.Swap(&other->q_stiffness_);
    ctrl_mode_.Swap(&other->ctrl_mode_);
    vias_.Swap(&other->vias_);
    q_desired_.Swap(&other->q_desired_);
    pos_desired_.Swap(&other->pos_desired_);
    qdot_desired_.Swap(&other->qdot_desired_);
    q_slew_rate_.Swap(&other->q_slew_rate_);
    smoothing_mode_.Swap(&other->smoothing_mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata M3JointArrayCommand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = M3JointArrayCommand_descriptor_;
  metadata.reflection = M3JointArrayCommand_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int M3JointArrayParam::kTestFieldNumber;
#endif  // !_MSC_VER

M3JointArrayParam::M3JointArrayParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void M3JointArrayParam::InitAsDefaultInstance() {
}

M3JointArrayParam::M3JointArrayParam(const M3JointArrayParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void M3JointArrayParam::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

M3JointArrayParam::~M3JointArrayParam() {
  SharedDtor();
}

void M3JointArrayParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void M3JointArrayParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M3JointArrayParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return M3JointArrayParam_descriptor_;
}

const M3JointArrayParam& M3JointArrayParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5farray_2eproto();  return *default_instance_;
}

M3JointArrayParam* M3JointArrayParam::default_instance_ = NULL;

M3JointArrayParam* M3JointArrayParam::New() const {
  return new M3JointArrayParam;
}

void M3JointArrayParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    test_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool M3JointArrayParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double test = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void M3JointArrayParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional double test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->test(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* M3JointArrayParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional double test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->test(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int M3JointArrayParam::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double test = 1;
    if (has_test()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M3JointArrayParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const M3JointArrayParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const M3JointArrayParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void M3JointArrayParam::MergeFrom(const M3JointArrayParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void M3JointArrayParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M3JointArrayParam::CopyFrom(const M3JointArrayParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M3JointArrayParam::IsInitialized() const {
  
  return true;
}

void M3JointArrayParam::Swap(M3JointArrayParam* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata M3JointArrayParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = M3JointArrayParam_descriptor_;
  metadata.reflection = M3JointArrayParam_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
