// M3 -- Meka Robotics Robot Components
// Copyright (c) 2010 Meka Robotics
// Author: edsinger@mekabot.com (Aaron Edsinger)
// 
// M3 is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// M3 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with M3.  If not, see <http://www.gnu.org/licenses/>.

option optimize_for = SPEED;

import "component_base.proto";


enum ACTUATOR_MODE{
		ACTUATOR_MODE_OFF = 0;				//Actuator off
		ACTUATOR_MODE_PWM = 1;				//Direct PWM control
		ACTUATOR_MODE_TORQUE = 2;			//Direct Torque control
}

message M3ActuatorStatus{
	optional M3BaseStatus		base=1;					//Reserved
	optional double			motor_temp= 2;				//(C)
    	optional double			amp_temp=3;				//(C)
    	optional double			current=4;				//(mA)
    	optional double		    	torque=6;				//(mNm)
	optional double		    	torquedot=7;				//(mNm)
   	optional double			theta=8;				//(Deg)
    	optional double			thetadot=9;				//(Deg/s)
    	optional double			thetadotdot=10;				//(Deg/s^2)
    	optional double		    	torque_error=11;			//(mNm)
	optional int32			pwm_cmd=12;				//Current PWM command to motor
	optional double			ambient_temp=13;			//(C)
	optional double			case_temp=14;				//(C)
	optional double			power=16;				//(W)
	optional int32			flags=17;				//Status reported by DSP
	optional double			ext_temp=18;				//(C)
}

message M3ActuatorParam{
	optional double		max_amp_temp = 1;				//Safety thresh (C)
	optional double		max_tq = 2;					//Safety thresh (mNm)
	optional double		min_tq = 3;					//Safety thresh (mNm)
	optional double		max_amp_current=4;				//Safety thresh (mA)
	optional double 	max_overload_time=5;				//Allowed overload condition (S)
}
 
message M3ActuatorCommand{
	optional double			tq_desired = 2;     			//Desired torque (mNm)
	optional double			pwm_desired = 3;    			//Desired pwm (ticks)
	optional ACTUATOR_MODE		ctrl_mode = 4;				//Desired control mode
	optional bool			brake_off=5;				//Disable brake if present
}
